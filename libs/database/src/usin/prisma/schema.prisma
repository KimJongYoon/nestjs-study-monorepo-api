// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/client"
  previewFeatures = ["views"]
}

datasource db {
  provider = "mysql"
  url      = env("USIN_DATABASE_URL")
}

model User {
  uid       String       @id
  createdAt DateTime     @default(now()) @map("created_at")
  createdBy String       @map("created_by")
  updatedAt DateTime?    @updatedAt @map("updated_at")
  updatedBy String       @map("updated_by")
  deletedAt DateTime?    @map("deleted_at")
  deletedBy String?      @map("deleted_by")
  useYn     BooleanTypes @default(Y) @map("use_yn")
  remark    String?
  email     String       @unique
  nickName  String?      @map("nick_name")
  password  String       @map("password")

  @@map("USER")
}

model AdminAccount {
  email     String       @id
  createdAt DateTime     @default(now()) @map("created_at")
  createdBy String       @map("created_by")
  updatedAt DateTime?    @updatedAt @map("updated_at")
  updatedBy String       @map("updated_by")
  deletedAt DateTime?    @map("deleted_at")
  deletedBy String?      @map("deleted_by")
  useYn     BooleanTypes @default(Y) @map("use_yn")
  remark    String?
  nickName  String?      @map("nick_name")
  password  String       @map("password")
  posts     Post[]

  @@map("ADMIN_ACCOUNT")
}

model Post {
  id           String       @id @default(uuid())
  title        String       @db.VarChar(255)
  content      String?
  thumbnailUrl String?      @map("thumbnail_url")
  published    Boolean      @default(false)
  readCount    Int          @default(0) @map("read_count")
  createdAt    DateTime     @default(now()) @map("created_at")
  createdBy    String       @map("created_by")
  updatedAt    DateTime?    @updatedAt @map("updated_at")
  updatedBy    String       @map("updated_by")
  deletedAt    DateTime?    @map("deleted_at")
  deletedBy    String?      @map("deleted_by")
  useYn        BooleanTypes @default(Y) @map("use_yn")
  remark       String?

  adminEmail   String       @map("admin_email")
  adminAccount AdminAccount @relation(fields: [adminEmail], references: [email], onDelete: Cascade, onUpdate: NoAction)

  @@map("POST")
}

// View
view ViewUsinUser {
  uid       String   @unique
  createdAt DateTime @map("created_at")
  email     String
  nickName  String   @map("nick_name")

  @@map("USIN_VIEW_USER")
}

view ViewAdminAccount {
  email     String    @id
  remark    String?
  nickName  String?   @map("nick_name")
  createdAt DateTime? @map("created_at")
  createdBy String    @map("created_by")

  posts ViewAdminPost[]

  @@map("VIEW_ADMIN_ACCOUNT")
}

view ViewAdminPost {
  id           String    @id
  title        String
  content      String?
  published    Boolean
  thumbnailUrl String?   @map("thumbnail_url")
  adminEmail   String    @map("admin_email")
  createdAt    DateTime? @map("created_at")
  createdBy    String    @map("created_by")
  remark       String?

  adminAccount ViewAdminAccount? @relation(fields: [adminEmail], references: [email])

  @@map("VIEW_ADMIN_POST")
}

view ViewUsinPost {
  id           String    @id
  title        String
  content      String?
  thumbnailUrl String?   @map("thumbnail_url")
  createdAt    DateTime? @map("created_at")
  createdBy    String    @map("created_by")

  @@map("VIEW_USIN_POST")
}

enum BooleanTypes {
  Y
  N
}
